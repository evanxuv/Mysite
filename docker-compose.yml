version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:5.7
    container_name: mysite-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: my_site
      MYSQL_USER: mysite
      MYSQL_PASSWORD: mysite123456
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: 
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=+08:00
    networks:
      - mysite-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot应用
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mysite-app
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/my_site?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
      SPRING_DATASOURCE_USERNAME: mysite
      SPRING_DATASOURCE_PASSWORD: mysite123456
      TZ: Asia/Shanghai
    volumes:
      - app-logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mysite-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: mysite-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - mysite-network

volumes:
  mysql-data:
    driver: local
  app-logs:
    driver: local
  nginx-logs:
    driver: local

networks:
  mysite-network:
    driver: bridge

